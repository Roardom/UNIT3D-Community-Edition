// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use diesel::sql_types::*;

use chrono::NaiveDateTime;
use diesel::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, Identifiable, PartialEq, Queryable, Selectable, Serialize)]
#[diesel(table_name = crate::database::schema::torrents)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct Torrent {
    pub id: u32,
    pub name: String,
    pub description: String,
    pub mediainfo: Option<String>,
    pub bdinfo: Option<String>,
    pub file_name: String,
    pub num_file: i32,
    pub folder: Option<String>,
    pub size: f64,
    pub nfo: Option<Vec<u8>>,
    pub leechers: i32,
    pub seeders: i32,
    pub times_completed: i32,
    pub category_id: Option<i32>,
    pub user_id: u32,
    pub imdb: u32,
    pub tvdb: u32,
    pub tmdb: u32,
    pub mal: u32,
    pub igdb: String,
    pub season_number: Option<i32>,
    pub episode_number: Option<i32>,
    pub stream: bool,
    pub free: i16,
    pub doubleup: bool,
    pub refundable: bool,
    pub highspeed: bool,
    pub featured: bool,
    pub status: i16,
    pub moderated_at: Option<NaiveDateTime>,
    pub moderated_by: Option<i32>,
    pub anon: i16,
    pub sticky: i16,
    pub sd: bool,
    pub internal: bool,
    pub created_at: Option<NaiveDateTime>,
    pub updated_at: Option<NaiveDateTime>,
    pub bumped_at: Option<NaiveDateTime>,
    pub deleted_at: Option<NaiveDateTime>,
    pub fl_until: Option<NaiveDateTime>,
    pub du_until: Option<NaiveDateTime>,
    pub release_year: Option<u16>,
    pub type_id: i32,
    pub resolution_id: Option<i32>,
    pub distributor_id: Option<i32>,
    pub region_id: Option<i32>,
    pub personal_release: i32,
    pub balance: Option<i64>,
    pub balance_offset: Option<i64>,
    pub info_hash: Vec<u8>,
}
